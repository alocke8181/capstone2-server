//This is how the character is stored in the database
//This could potentially be broken into multiple tables


id : serial autoincrementing
creator_ID : relational

name : string 
race : string - specifically the possible values for the api 
subrace : string - same as from the api
class : string - api index
background : string - api index
alignment : string
level : intg
exp : intg

str : intg
dex : intg
con : intg
int : intg
wis : intg
cha : intg

profBonus : intg
savingProfs : string - each proficiency seperate with '_' eg "dexterity_charisma"
skillProfs : string - underscore seperated
jackOfAllTrades : boolean

hpMax : intg 
hpCurr : intg 
hpTemp : intg
hitDice : intg - represents how many sides the dice has
hitDiceMax : intg
hitDiceCurr : intg
deathSaveSuccess : intg
deathFaveFail : intg

personality : string - limit 300 chars
ideals : string - limit 300 chars
bonds : string - limit 300 chars
flaws : string - limit 300 chars

traits : string - underscore seperated api indexes sorted alphabetically
languages : string - underscore seperated
equipProfs : string - underscore seperated

equipment : string - underscore seperated pairs of hyphenated items and amounts
copper : intg
silver : intg
gold : intg

attacks : underscore seperated api index or references to custom attacks stored in the db

spellAbility : string
spellSaveDc : intg
spellAtkBonus : intg

cantrips : string - underscore seperated api index
levelOne : string - USAI
levelOneOeft : intg
//Repeat for all levels

age : intg
height : string
weight : string
eyes : string
skin : string
hair : string
backstory : string - limit 1000
appearance : string - limit 1000
allies : string - limit 300